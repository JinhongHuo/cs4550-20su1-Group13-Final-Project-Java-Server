{"version":3,"sources":["Component/SearchComponent.js","Services/OMDBserver.js","Component/movieComponents/MovieComponent.js","Component/movieComponents/MovieSearchResultComponent.js","Services/UserService.js","Component/HomeComponent.js","Component/ProfileComponent.js","Component/RegisterComponent.js","Component/LoginComponent.js","Services/CommentService.js","Component/CommentForCommentComponent.js","Component/CommentComponent.js","Component/movieComponents/MovieTimelineComponent.js","Component/movieComponents/YoutubeSearchComponent.js","Component/movieComponents/MovieDetailComponent.js","Component/movieComponents/MovieCardComponent.js","Component/PlaylistComponent.js","Component/UserProfileComponent.js","Component/movieComponents/MovieWebsite.js","App.js","serviceWorker.js","index.js"],"names":["SearchComponent","state","movieTitle","className","title","value","this","onChange","e","setState","target","to","React","Component","fetch","then","response","json","id","MovieComponent","height","alt","props","movie","src","Poster","imdbID","Title","Year","MovieSearchResultComponent","match","params","movies","searchMovie","services","Search","updateTitleInState","newTitle","prevState","prevProps","snapshot","for","event","map","key","_id","method","credentials","user","body","JSON","stringify","headers","un","pw","username","password","uid","res","HomeComponent","login","UserService","catch","actualUser","role","onClick","window","location","reload","ProfileComponent","updated","update","logout","history","push","htmlFor","type","placeholder","readOnly","userId","phone","email","dob","Register","verifyPassword","error","register","currentUser","Login","mid","comment","cid","CommentForCommentComponent","comments","deleteComment","CommentService","filter","c","postedBy","text","CommentComponent","commentText","commentOnHere","makeComment","movieId","createComment","newComment","console","log","commentFor","time","parseInt","MovieTimelineComponent","OMDBserver","min","max","Runtime","YoutubeSearch","keywordChanged","keyword","responseJson","items","obj","videoId","resultyt","link","index","width","frameBorder","allowFullScreen","frame","MovieDetailComponent","Plot","MovieCardComponent","omdbID","PlaylistComponent","renderedMovie","UserProfileComponent","MovieWebsite","exact","path","RegisterComponent","LoginComponent","component","App","Boolean","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.e947ff42.chunk.js","sourcesContent":["import React from 'react'\nimport {Link} from 'react-router-dom'\nimport './SearchComponent.css'\n\nexport default class SearchComponent extends React.Component{\n\n  state = {\n    movieTitle: ''\n  }\n\n  render() {\n    return (\n        <div>\n        <h3>Movie Search</h3>\n        <div className={'container'}>\n          <input title={'Search...'} value={this.state.movieTitle} onChange={(e)=> this.setState({\n            movieTitle: e.target.value\n          })}/>\n          <Link to={`/search/${this.state.movieTitle}`}><button>Search</button></Link>\n        </div>\n        </div>\n    )\n  }\n}","const searchMovieByTitle = (title) =>\n    fetch(`https://www.omdbapi.com/?s=${title}&apikey=a9d9c03f`)\n    .then(response => response.json())\n\nconst searchMovieByID = (id) =>\n    fetch(`https://www.omdbapi.com/?i=${id}&plot=full&apikey=a9d9c03f`)\n    .then(response => response.json())\n\n\nexport default {\n  searchMovieByTitle,\n  searchMovieByID\n}\n\n\n","import React from 'react'\nimport {Link} from \"react-router-dom\";\n\nexport default class MovieComponent extends React.Component {\n\n  render() {\n    return (\n        <tr>\n          <td><img height='200px' alt={this.props.movie.title}\n                   src={this.props.movie.Poster}/></td>\n          <td><Link\n              to={`/movies/${this.props.movie.imdbID}`}>{this.props.movie.Title}</Link>\n          </td>\n          <td>{this.props.movie.Year}</td>\n        </tr>\n    )\n  }\n}","import React from 'react'\nimport services from '../../Services/OMDBserver'\nimport MovieComponent from './MovieComponent'\nimport {Link} from \"react-router-dom\";\n\nexport default class MovieSearchResultComponent extends React.Component {\n\n  state = {\n    title: this.props.match.params.movieTitle,\n    movies: [],\n  }\n\n  searchMovie = () => {\n    services.searchMovieByTitle(this.state.title)\n    .then(movies => this.setState({\n      movies: movies.Search\n    }))\n  }\n\n  updateTitleInState = (newTitle) => {\n    this.setState(prevState => ({\n          title: newTitle\n        })\n    )\n  }\n\n  componentDidMount() {\n    this.searchMovie()\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.match.params.movieTitle\n        !== this.props.match.params.movieTitle) {\n      this.searchMovie()\n    }\n  }\n\n  render() {\n    return (\n        <div>\n          <h1>Movie Search</h1>\n          <label for={\"movie\"}>Title</label>\n          <input id={\"movie\"}\n                 value={this.state.title}\n                 onChange={(event) => this.updateTitleInState(\n                     event.target.value)}/>\n          <Link to={`/search/${this.state.title}`}>\n            <button>Search</button>\n          </Link>\n          <table className={'table table-hover'}>\n            <thead>\n            <tr>\n              <td>Poster</td>\n              <td>Title</td>\n              <td>Year</td>\n            </tr>\n            </thead>\n            <tbody>\n            {\n              this.state.movies.map(movie =>\n                  <MovieComponent\n                      key={movie._id}\n                      movie={movie}/>)\n            }\n            </tbody>\n          </table>\n        </div>\n    )\n  }\n}","const fetchProfile = () =>\n    fetch(\"https://cs4550-20su1-final-java-server.herokuapp.com/api/profile\", {\n      method: 'POST',\n      credentials: \"include\"\n    })\n    .then(response => response.json()\n    )\n\nconst updateProfile = (user) =>\n    fetch(\"https://cs4550-20su1-final-java-server.herokuapp.com/api/profile\", {\n      body: JSON.stringify(user),\n      headers: {\n        'content-type': 'application/json'\n      },\n      method: 'PUT',\n      credentials: \"include\"\n    })\n    .then(response => response.json())\n\nconst logout = () =>\n    fetch(\"https://cs4550-20su1-final-java-server.herokuapp.com/api/logout\", {\n      method: 'POST',\n      credentials: \"include\"\n    })\n\nconst login = (un, pw) =>\n    fetch(\"https://cs4550-20su1-final-java-server.herokuapp.com/api/login\", {\n      body: JSON.stringify({\n        username: un,\n        password: pw\n      }),\n      headers: {\n        'content-type': 'application/json'\n      },\n      method: 'POST',\n      credentials: \"include\"\n    }).then(response => response.json())\n\nconst register = (un, pw) =>\n    fetch(\"https://cs4550-20su1-final-java-server.herokuapp.com/api/register\", {\n      body: JSON.stringify({\n        username: un,\n        password: pw\n      }),\n      headers: {\n        'content-type': 'application/json'\n      },\n      method: \"POST\",\n      credentials: \"include\"\n    }).then(response => response.json())\n\nconst findUserById = (uid) =>\n    fetch(`https://cs4550-20su1-final-java-server.herokuapp.com/api/users/${uid}`)\n    .then(res => res.json())\n\nexport default {\n  fetchProfile,\n  updateProfile,\n  logout,\n  login,\n  register,\n  findUserById\n}","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport UserService from \"../Services/UserService\";\n\nexport default class HomeComponent extends React.Component {\n  state = {\n    login: false,\n    user: {}\n  }\n\n  componentDidMount() {\n    UserService.fetchProfile()\n    .catch(e => {\n      this.setState({login: false})\n    })\n    .then(actualUser => {\n      if (actualUser) {\n        UserService.findUserById(actualUser.id).then(res => this.setState({\n          user: res,\n          login: true\n        }))\n\n      }\n    })\n  }\n\n  render() {\n    return (\n        <div>\n          <h3>Home</h3>\n          {this.state.login &&\n          <h3>\n            Welcome Home {this.state.user.username} Role\n            : {this.state.user.role}\n          </h3>\n          }\n\n          {!this.state.login &&\n          <h3>\n            To use MovieZone, please login or register a new account\n          </h3>\n          }\n\n          <div className=\"list-group\">\n            <Link className=\"list-group-item\" to='/search'>\n              Movie Search\n            </Link>\n            {this.state.login &&\n            <Link className=\"list-group-item\" to='/profile'>\n              Profile\n            </Link>\n            }\n            <Link className=\"list-group-item\" to='/register'>\n              Register\n            </Link>\n            {!this.state.login &&\n            <Link className=\"list-group-item\" to='/login'>\n              Login\n            </Link>\n            }\n            {\n              this.state.login &&\n              <button className={'btn btn-danger'}\n                      onClick={()=>UserService.logout()\n                      .then(res => window.location.reload(false))}>sign out</button>\n            }\n          </div>\n        </div>)\n  }\n}\n","import React from \"react\";\nimport {Link} from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.css';\nimport UserService from \"../Services/UserService\";\n\nexport default class ProfileComponent extends React.Component {\n\n  state = {\n    user: {\n      username: '',\n      password: '',\n    },\n    updated: false,\n  }\n\n  update = () => {\n    this.setState({updated: false})\n    UserService.updateProfile(this.state.user)\n    .then(user => this.setState({\n          user: user,\n          updated: true,\n        }\n    ))\n  }\n\n  logout = () => {\n    UserService.logout()\n    .then(response => this.props.history.push(\"/\"))\n  }\n\n  componentDidMount() {\n    UserService.fetchProfile()\n    .catch(e => {\n      this.props.history.push(\"/\")\n    })\n    .then(actualUser => {\n      if (actualUser) {\n        UserService.findUserById(actualUser.id).then(res => this.setState({\n          user: res\n        }))\n\n      }\n    })\n  }\n\n  render() {\n    return (\n        <div>\n          <h3>Profile</h3>\n          <Link className=\"list-group-item\" to='/'>\n            HomePage\n          </Link>\n          <div className=\"container\">\n            {this.state.updated &&\n            <div className=\"form-group row alertFld wbdv-message\">\n              <div className=\"alert alert-success wbdv-message\" role=\"alert\">\n                Profile saved!\n              </div>\n            </div>\n            }\n\n            <div className=\"form-group row\">\n\n              <label className=\"col-lg-2 col-sm-6 col-form-label\"\n                     htmlFor=\"username\">Username</label>\n              <div className=\"col-lg-10 col-sm-6\">\n\n                <input id=\"username\"\n                       className=\"form-control wbdv-field wbdv-username\"\n                       value={this.state.user.username}\n                       type=\"text\"\n                       placeholder=\"joe123\"\n                       title=\"Use this username to login\"\n                       readOnly/>\n                {\n                  this.props.match.params.userId === this.state.user.id &&\n                  <h3>{this.state.user.username}</h3>\n                }\n              </div>\n            </div>\n\n            <div className=\"form-group row\">\n              <label className=\"col-lg-2 col-sm-6 col-form-label\"\n                     htmlFor=\"password\">Password</label>\n              <div className=\"col-lg-10 col-sm-6\">\n\n                <input id=\"password\"\n                       className=\"form-control wbdv-field wbdv-password\"\n                       value={this.state.user.password}\n                       onChange={e => this.setState({\n                         user: {\n                           ...this.state.user,\n                           password: e.target.value\n                         }\n                       })}\n                       type=\"password\"/>\n              </div>\n            </div>\n\n\n            <div className=\"form-group row\">\n              <label className=\"col-lg-2 col-sm-6 col-form-label\"\n                     htmlFor=\"phone\">Phone</label>\n              <div className=\"col-lg-10 col-sm-6\">\n\n                <input id=\"phone\"\n                       className=\"form-control wbdv-field wbdv-phone\"\n                       value={this.state.user.phone}\n                       onChange={e => this.setState({\n                         user: {\n                           ...this.state.user,\n                           phone: e.target.value\n                         }\n                       })}\n                       type=\"number\"/>\n\n              </div>\n            </div>\n\n            <div className=\"form-group row\">\n              <label className=\"col-lg-2 col-sm-6 col-form-label\"\n                     htmlFor=\"email\">Email</label>\n              <div className=\"col-lg-10 col-sm-6\">\n\n                <input id=\"email\"\n                       className=\"form-control wbdv-field wbdv-dob\"\n                       value={this.state.user.email}\n                       onChange={e => this.setState({\n                         user: {\n                           ...this.state.user,\n                           email: e.target.value\n                         }\n                       })}\n                       type=\"email\"/>\n              </div>\n            </div>\n\n\n            <div className=\"form-group row\">\n\n              <label className=\"col-lg-2  col-form-label\"\n                     htmlFor=\"dob\">Date of birth</label>\n              <input id=\"dob\"\n                     className=\"form-control col-lg-10 wbdv-field wbdv-dob\"\n                     type=\"date\"\n                     value={this.state.user.dob}\n                     onChange={e => this.setState({\n                       user: {\n                         ...this.state.user,\n                         dob: e.target.value\n                       }\n                     })}/>\n            </div>\n\n            <div className=\"form-group row\">\n              <label className=\"col-lg-2 col-sm-6 col-form-label\"\n                     htmlFor=\"role\">Role</label>\n              <div className=\"col-lg-10 col-sm-6\">\n                <select id=\"role\"\n                        className=\"form-control wbdv-field wbdv-dob\"\n                        value={this.state.user.role}\n                        onChange={e => this.setState({\n                          user: {\n                            ...this.state.user,\n                            role: e.target.value\n                          }\n                        })}>\n                  <option value={null}>--</option>\n                  <option value=\"user\">User</option>\n                  <option value=\"admin\">Admin</option>\n                </select>\n              </div>\n            </div>\n\n            <div className=\"form-group row\">\n              <div className=\"col-lg-2\">\n                <button\n                    onClick={this.update}\n                    className=\"btn btn-success wbdv-button wbdv-update\"\n                    id=\"updateBtn\">Update\n                </button>\n                <button\n                    className={'btn btn-danger'}\n                    onClick={this.logout}>Sign Out\n                </button>\n\n              </div>\n\n            </div>\n          </div>\n        </div>\n    )\n  }\n}\n\n","import React from \"react\";\nimport UserService from \"../Services/UserService\";\nimport {Link} from 'react-router-dom'\n\nexport default class Register extends React.Component {\n  state = {\n    username: '',\n    password: '',\n    verifyPassword: '',\n    error:\"\"\n  }\n\n  register = () =>\n      UserService.register(this.state.username,this.state.password)\n      .catch(e => {\n        this.setState({\n          error: 'Unable to register'\n        })\n      })\n      .then(currentUser => {\n        if (currentUser) {\n          this.props.history.push(\"/profile\")\n        }\n      })\n\n  render() {\n    return (\n        <div>\n          <h1>Register</h1>\n          <Link className=\"list-group-item\" to='/'>\n            HomePage\n          </Link>\n          <input\n              value={this.state.username}\n              onChange={(e) => this.setState({\n                username: e.target.value\n              })}\n              className=\"form-control\"\n              placeholder=\"username\"/>\n          <input\n              value={this.state.password}\n              onChange={(e) => this.setState({\n                password: e.target.value\n              })}\n              className=\"form-control\"\n              type=\"password\"\n              placeholder=\"password\"/>\n          <input\n              value={this.state.verifyPassword}\n              onChange={(e) => this.setState({\n                verifyPassword: e.target.value\n              })}\n              className=\"form-control\"\n              type=\"password\"\n              placeholder=\"verify password\"/>\n\n          <button\n              onClick={this.register}\n              className=\"btn btn-primary btn-block\">\n            Register\n          </button>\n          <Link className=\"list-group-item\" to='/'>\n            Cancel\n          </Link>\n          <Link className=\"list-group-item\" to='/login'>\n            Sign in\n          </Link>\n        </div>\n    )\n  }\n}\n","import React from \"react\";\nimport {Link} from 'react-router-dom'\nimport UserService from \"../Services/UserService\";\n\nexport default class Login extends React.Component {\n  state = {\n    username: '',\n    password: '',\n    role: ''\n  }\n\n  login = () =>\n      UserService.login(this.state.username, this.state.password)\n      .catch(e => this.props.history.push(\"/login\"))\n      .then(currentUser => this.props.history.push('/profile'))\n\n  render() {\n    return (\n        <div>\n          <h1>Login</h1>\n          <Link className=\"list-group-item\" to='/'>\n            HomePage\n          </Link>\n          <input\n              value={this.state.username}\n              onChange={(e) => this.setState({\n                username: e.target.value\n              })}\n              className=\"form-control\"\n              placeholder=\"username\"/>\n          <input\n              value={this.state.password}\n              onChange={(e) => this.setState({\n                password: e.target.value\n              })}\n              className=\"form-control\"\n              type=\"password\"\n              placeholder=\"password\"/>\n\n\n          <button\n              onClick={this.login}\n              className=\"btn btn-primary btn-block\">\n            Login\n          </button>\n\n          <Link className=\"list-group-item\" to='/'>\n            Cancel\n          </Link>\n\n          <Link className=\"list-group-item\" to='/register'>\n            Sign up\n          </Link>\n        </div>\n    )\n  }\n}\n","const createComment = (mid, comment) =>\n    fetch(`https://cs4550-20su1-final-java-server.herokuapp.com/api/movies/${mid}/comments`, {\n      method: 'POST',\n      body: JSON.stringify(comment),\n      headers: {\n        'content-type': 'application/json'\n      }\n    }).then(res => res.json())\n\nconst findCommentForMovie = (mid) =>\n    fetch(`https://cs4550-20su1-final-java-server.herokuapp.com/api/movies/${mid}/comments`)\n    .then(res => res.json())\n\nconst deleteComment = (cid) =>\n    fetch(`https://cs4550-20su1-final-java-server.herokuapp.com/api/comments/${cid}`, {\n      method: 'DELETE'\n    }).then(res => res.json())\n\nexport default {\n  createComment,\n  findCommentForMovie,\n  deleteComment\n}","import React from 'react'\nimport CommentService from \"../Services/CommentService\";\nimport {Link} from \"react-router-dom\";\nimport UserService from \"../Services/UserService\";\n\nexport default class CommentForCommentComponent extends React.Component {\n\n  state = {\n    comments: this.props.comments,\n    currentUser: {}\n  }\n\n  deleteComment = (cid) =>\n      CommentService.deleteComment(cid)\n      .then(res => this.setState({\n        comments: this.state.comments.filter(c =>\n            c.id !== cid)\n      }))\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.comments !== this.props.comments) {\n      this.setState({comments: this.props.comments})\n    }\n\n    UserService.fetchProfile()\n    .catch(e => {\n      this.props.history.push(\"/\")\n    })\n    .then(user => UserService.findUserById(user.id)\n    .then(res => this.setState({currentUser: res})))\n  }\n\n  render() {\n    return (\n        <ul className={'list-group'}>\n          {\n            this.state.comments.map(comment =>\n                <li key={comment.id}\n                    className={'list-group-item'}>\n                  <Link\n                      to={`/profile/${comment.postedBy}`}>{comment.username}</Link>\n                  {comment.text}\n                  {\n                    (this.state.currentUser.id === comment.postedBy\n                        || this.state.currentUser.role === 'admin') &&\n                    <button className={'btn-sm btn-danger float-right'}\n                            onClick={() => this.deleteComment(\n                                comment.id)}>delete</button>\n                  }\n                </li>\n            )\n          }\n        </ul>\n    )\n  }\n}","import React from 'react'\nimport CommentForCommentComponent from \"./CommentForCommentComponent\";\nimport CommentService from \"../Services/CommentService\";\nimport {Link} from \"react-router-dom\";\nimport UserService from \"../Services/UserService\";\n\nexport default class CommentComponent extends React.Component {\n\n  state = {\n    commentText: 'Type your comment here',\n    comment: this.props.comment,\n    commentOnHere: [],\n    makeComment: false,\n    movieId: this.props.movieId,\n    currentUser: {}\n  }\n\n  createComment = (mid, newComment) => {\n    console.log(newComment)\n    this.setState({makeComment: false})\n    CommentService.createComment(mid, newComment)\n    .then(res => this.setState(\n        {commentOnHere: [...this.state.commentOnHere, res]}))\n  }\n\n  componentDidMount() {\n    CommentService.findCommentForMovie(this.state.movieId)\n    .then(res => {\n      this.setState({\n        commentOnHere: res.filter(c =>\n            c.commentFor === this.state.comment.id\n        )\n      })\n    })\n\n    UserService.fetchProfile()\n    .catch(e => {\n      this.props.history.push(\"/\")\n    })\n    .then(user => UserService.findUserById(user.id)\n    .then(res => this.setState({currentUser: res})))\n  }\n\n  render() {\n    return (\n        <li className={'list-group-item'}>\n          <Link\n              to={`/profile/${this.state.comment.postedBy}`}>{this.state.comment.username}</Link>\n          <h4>{this.state.comment.text}</h4>\n          <button className={'btn btn-sm btn-info'}\n                  onClick={() => this.setState({makeComment: true})}>Comment\n          </button>\n\n          {\n            (this.state.currentUser.id === this.state.comment.postedBy\n                || this.state.currentUser.role === 'admin') &&\n            <button className={'btn-sm btn-danger'}\n                    onClick={() => this.props.deleteComment(\n                        this.state.comment.id)}>delete</button>\n          }\n\n          <CommentForCommentComponent comments={this.state.commentOnHere}/>\n          {\n            this.state.makeComment &&\n            <div>\n              <input value={this.state.commentText}\n                     onChange={e => this.setState(\n                         {commentText: e.target.value})}/>\n              <button\n                  onClick={() => this.createComment(this.state.movieId,\n                      {\n                        text: this.state.commentText,\n                        time: -6,\n                        commentFor: this.state.comment.id,\n                        movie: this.state.movieId,\n                        postedBy: parseInt(this.state.currentUser.id),\n                        username: this.state.currentUser.username\n                      })}\n                  className={'btn btn-success'}>submit\n              </button>\n            </div>\n          }\n        </li>\n    )\n  }\n}","import React from 'react'\nimport './MovieTimelineComponent.css'\nimport CommentComponent from \"../CommentComponent\";\nimport CommentService from \"../../Services/CommentService\";\nimport OMDBserver from \"../../Services/OMDBserver\";\nimport UserService from \"../../Services/UserService\";\n\nexport default class MovieTimelineComponent extends React.Component {\n  state = {\n    movie: {},\n    movieId: this.props.movieId,\n    commentText: 'Select a time of the movie and type your comment here',\n    time: 0,\n    comments: [],\n    currentUser: {}\n  }\n\n  componentDidMount() {\n    OMDBserver.searchMovieByID(this.props.movieId).then(\n        res => {\n          this.setState({movie: res})\n        }\n    )\n    CommentService.findCommentForMovie(this.state.movieId)\n    .then(res => this.setState({comments: res}))\n\n    UserService.fetchProfile()\n    .catch(e => {\n      this.props.history.push(\"/\")\n    })\n    .then(user => UserService.findUserById(user.id)\n    .then(res => this.setState({currentUser: res})))\n  }\n\n  deleteComment = (cid) =>\n      CommentService.deleteComment(cid)\n      .then(res => this.setState({\n        comments: this.state.comments.filter(c =>\n            c.id !== cid)\n      }))\n\n  createComment = (mid, newComment) =>\n      CommentService.createComment(mid, newComment)\n      .then(res => this.setState({comments: [...this.state.comments, res]}))\n\n  render() {\n    return (\n        <div>\n          <div className=\"slidecontainer\">\n            <input\n                onChange={e => this.setState({time: e.target.value})}\n                type=\"range\" min=\"1\"\n                max={parseInt(this.state.movie.Runtime)}\n                value={this.state.time}\n                className=\"slider\"\n                id=\"myRange\"/>\n          </div>\n          <h3>Around {this.state.time} mins, we found these comments.</h3>\n          <ul>\n            {\n              this.state.comments.map(\n                  comment => {\n                    if (parseInt(this.state.time) - 5 < comment.time &&\n                        comment.time < parseInt(this.state.time) + 5) {\n                      return (\n                          <li key={comment.id}\n                              className={'list-group-item'}>{comment.time} mins:\n                            <CommentComponent\n                                deleteComment={this.deleteComment}\n                                movieId={this.state.movieId}\n                                comments={this.state.comments}\n                                comment={comment}/></li>\n                      )\n                    }\n                  }\n              )\n            }\n            <li className={'list-group'}>\n              <input value={this.state.commentText}\n                     onChange={e => this.setState(\n                         {commentText: e.target.value})}/>\n              <button\n                  onClick={() => this.createComment(this.state.movieId,\n                      {\n                        text: this.state.commentText,\n                        time: this.state.time,\n                        commentFor: -1,\n                        movie: this.state.movieId,\n                        postedBy: parseInt(this.state.currentUser.id),\n                        username: this.state.currentUser.username\n                      })}\n                  className={'btn btn-success'}>submit\n              </button>\n            </li>\n          </ul>\n        </div>\n    )\n  }\n}","import React from 'react'\nimport OMDBserver from \"../../Services/OMDBserver\";\n\nexport default class YoutubeSearch extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      keyword: '',\n      resultyt: []\n    };\n  }\n\n  keywordChanged = event =>\n      this.setState({keyword: event.target.value})\n\n  componentDidMount() {\n    OMDBserver.searchMovieByID(this.props.movieId).then(\n        res => {\n          this.setState({movie: res},()=>this.setState({keyword:res.Title}))\n        }\n    )\n  }\n\n  searchMovie = () => {\n    fetch(\n        `https://www.googleapis.com/youtube/v3/search?part=snippet&maxResults=25&type=video&key=AIzaSyDZEj3buCTRh08vOAm2IWtFioJXO9n14BA%20&q=${this.state.keyword}`)\n    .then((response) => response.json())\n    .then((responseJson) => {\n      const kkk = responseJson.items.map(obj => obj.id.videoId);\n      const resultyt = responseJson.items.map(obj =>\n          \"https://www.youtube.com/embed/\" + obj.id.videoId);\n      this.setState({resultyt: resultyt});\n    })\n    .catch(error => {\n      console.error(error);\n    });\n  }\n\n  render() {\n    return (\n        <div>\n          <h2> Youtube Search</h2>\n          <div className={\"input-group\"}>\n            <input value={this.state.keyword}\n                   onChange={this.keywordChanged}\n                   className={\"form-control\"}\n                   placeholder={\"keyword\"}/>\n            <div className={\"input-group-append\"}>\n              <button\n                  onClick={this.searchMovie}\n                  className={\"btn btn-primary\"}>\n                Search\n              </button>\n            </div>\n          </div>\n          <div>\n            {this.state.resultyt.map((link, index) => {\n              var frame = <div key={index}>\n                <iframe width={\"560\"} height={\"315\"}\n                        src={link}\n                        frameBorder=\"0\"\n                        allowFullScreen></iframe>\n              </div>\n              return frame;\n            })\n            }\n            {this.frame}\n\n          </div>\n        </div>\n\n    )\n  }\n}\n","import React from 'react'\nimport OMDBserver from \"../../Services/OMDBserver\";\nimport CommentComponent from \"../CommentComponent\";\nimport MovieTimelineComponent from \"./MovieTimelineComponent\";\nimport CommentService from \"../../Services/CommentService\";\nimport UserService from \"../../Services/UserService\";\nimport YoutubeSearch from \"./YoutubeSearchComponent\";\n\nexport default class MovieDetailComponent extends React.Component {\n\n  state = {\n    currentUser: {},\n    commentText: \"Type your comment here\",\n    movie: {},\n    movieId: this.props.match.params.movieId,\n    comments: []\n  }\n\n  componentDidMount() {\n    OMDBserver.searchMovieByID(this.props.match.params.movieId).then(\n        res => {\n          this.setState({movie: res})\n        }\n    )\n    CommentService.findCommentForMovie(this.props.match.params.movieId)\n    .then(res => this.setState({comments: res}))\n\n    UserService.fetchProfile()\n    .catch(e => {\n      this.props.history.push(\"/\")\n    })\n    .then(user => UserService.findUserById(user.id)\n    .then(res => this.setState({currentUser: res})))\n  }\n\n  deleteComment = (cid) =>\n      CommentService.deleteComment(cid)\n      .then(res => this.setState({\n        comments: this.state.comments.filter(c =>\n            c.id !== cid)\n      }))\n\n  createComment = (mid, newComment) =>\n      CommentService.createComment(mid, newComment)\n      .then(res =>\n          this.setState({\n            comments: [...this.state.comments, res]\n          }))\n\n  render() {\n    return (\n        <div>\n          <div className={'row'}>\n            <div className={'col-3'}>\n              <img src={this.state.movie.Poster} alt={this.state.movie.Title}/>\n            </div>\n            <div className={'col-9'}>\n              <h2>{this.state.movie.Title}</h2>\n              <p>{this.state.movie.Plot}</p>\n              <p>{this.state.movie.Runtime}</p>\n            </div>\n          </div>\n          <h3>Movie Timeline</h3>\n          <MovieTimelineComponent movieId={this.state.movieId}/>\n          <h3>Comments</h3>\n          <ul className={'list-group'}>\n\n            {\n              this.state.comments.map(comment => {\n                    if (comment.time === -6 && comment.commentFor === -1) {\n                      return (<CommentComponent deleteComment={this.deleteComment}\n                                                key={comment.id}\n                                                movieId={this.state.movieId}\n                                                comment={comment}/>)\n                    }\n                  }\n              )\n            }\n\n            <li className={'list-group'}>\n              <input value={this.state.commentText}\n                     onChange={e => this.setState(\n                         {commentText: e.target.value})}/>\n              <button\n                  onClick={() => this.createComment(\n                      this.props.match.params.movieId,\n                      {\n                        text: this.state.commentText,\n                        time: -6,\n                        commentFor: -1,\n                        movie: this.props.match.params.movieId,\n                        postedBy: parseInt(this.state.currentUser.id),\n                        username: this.state.currentUser.username\n                      })}\n                  className={'btn btn-success'}>submit\n              </button>\n            </li>\n          </ul>\n          <YoutubeSearch movieId={this.state.movieId}/>\n        </div>\n    )\n  }\n}","import React from 'react'\nimport OMDBserver from \"../../Services/OMDBserver\";\nimport {Link} from \"react-router-dom\";\n\nexport default class MovieCardComponent extends React.Component {\n\n  state = {\n    movie: {}\n  }\n\n  componentDidMount() {\n    OMDBserver.searchMovieByID(this.props.omdbID)\n    .then(res => {\n      this.setState({movie: res})\n    })\n  }\n\n  render() {\n    return (\n        <div className=\"col mb-4\">\n          <div className=\"card h-100\">\n            <img src={this.state.movie.Poster} className=\"card-img-top\"\n                 alt={this.state.movie.Title}/>\n            <div className=\"card-body\">\n              <h5 className=\"card-title\"><Link\n                  to={`/movies/${this.state.movie.imdbID}`}>{this.state.movie.Title}</Link>\n              </h5>\n              <h5 className=\"card-text\">{this.state.movie.Year}</h5>\n            </div>\n          </div>\n        </div>\n    )\n  }\n}\n","import React from 'react'\nimport MovieCardComponent from \"./movieComponents/MovieCardComponent\";\n\nexport default class PlaylistComponent extends React.Component {\n\n  state = {\n    movies: [{omdbID: 'tt0372784'}, {omdbID: 'tt2975590'},\n      {omdbID: 'tt0096895'}, {omdbID: 'tt0103776'}],\n    renderedMovie: []\n  }\n\n\n\n  render() {\n    return (\n        <div className={\"row row-cols-1 row-cols-md-3\"}>\n          {\n            this.state.movies.map(movie => {\n              return (\n                  <MovieCardComponent key={movie.omdbID} omdbID={movie.omdbID}/>\n              )\n            })\n          }\n        </div>\n    )\n  }\n}","import React from 'react'\nimport UserService from \"../Services/UserService\";\n\nexport default class UserProfileComponent extends React.Component {\n\n  state = {\n    user: {},\n    currentUser: {}\n  }\n\n  componentDidMount() {\n    UserService.findUserById(this.props.match.params.userId)\n    .then(res => this.setState({\n          user: res\n        },\n        () => {\n          UserService.fetchProfile()\n          .then(res => this.setState({\n            currentUser: res\n          }, () => {\n            if (this.state.user.id === this.state.currentUser.id) {\n              this.props.history.push(\"/profile\")\n            }\n\n          }))\n        }))\n\n  }\n\n  render() {\n    return (\n        <div>\n          <h3>User Profile for {this.state.user.username}</h3>\n          <div className={'container'}>\n            {\n              this.currentUser.role === 'admin'&&\n                  <h1>admin view</h1>\n            }\n            <ul className={'list-group'}>\n              <li className={'list-group-item'}>Username: {this.state.user.username}</li>\n              <li className={'list-group-item'}>Phone: {this.state.user.phone}</li>\n              <li className={'list-group-item'}>Email: {this.state.user.email}</li>\n              <li className={'list-group-item'}>Date of\n                Birth{this.state.user.dob}</li>\n            </ul>\n          </div>\n        </div>\n    )\n  }\n}","import React from 'react'\nimport {BrowserRouter, Link, Route} from \"react-router-dom\";\nimport SearchComponent from \"../SearchComponent\";\nimport MovieSearchResultComponent from \"./MovieSearchResultComponent\";\nimport HomeComponent from \"../HomeComponent\"\nimport ProfileComponent from \"../ProfileComponent\"\nimport RegisterComponent from \"../RegisterComponent\";\nimport LoginComponent from \"../LoginComponent\";\nimport MovieDetailComponent from \"./MovieDetailComponent\";\nimport PlaylistComponent from \"../PlaylistComponent\";\nimport UserProfileComponent from \"../UserProfileComponent\";\nimport YoutubeSearch from \"./YoutubeSearchComponent\";\n\nexport default class MovieWebsite extends React.Component {\n\n  render() {\n    return (\n        <BrowserRouter>\n          <div>\n            <h1> Movie Zone </h1>\n            <Link to='/'>\n              HomePage\n            </Link>\n            <Route exact={true} path='/' exact={true}\n                   component={HomeComponent}/>\n            <Route exact={true} path={'/profile'} exact={true}\n                   component={ProfileComponent}/>\n            <Route exact={true} path='/register' exact={true}\n                   component={RegisterComponent}/>\n            <Route exact={true} path='/login' exact={true}\n                   component={LoginComponent}/>\n            <Route exact={true} path={['/search', '/search/']}\n                   component={SearchComponent}/>\n            <Route exact={true} path={'/search/:movieTitle'}\n                   component={MovieSearchResultComponent}/>\n            <Route exact={true} path={'/movies/:movieId'}\n                   component={MovieDetailComponent}/>\n            <Route exact={true} path={'/playlist'}\n                   component={PlaylistComponent}/>\n            <Route exact={true} path={'/profile/:userId'}\n                   component={UserProfileComponent}/>\n            <Route exact={true} path={'/youtube'}\n                   component={YoutubeSearch}/>\n          </div>\n        </BrowserRouter>\n    )\n  }\n}\n","import React from 'react';\nimport './App.css';\nimport MovieWebsite from \"./Component/movieComponents/MovieWebsite\";\n\nfunction App() {\n  return (\n      <MovieWebsite/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}